[{"/Users/komishtato/Desktop/gt-pt/homework/associate-directory/src/index.js":"1","/Users/komishtato/Desktop/gt-pt/homework/associate-directory/src/App.js":"2","/Users/komishtato/Desktop/gt-pt/homework/associate-directory/src/pages/Home.jsx":"3","/Users/komishtato/Desktop/gt-pt/homework/associate-directory/src/components/Search/SearchBox.jsx":"4","/Users/komishtato/Desktop/gt-pt/homework/associate-directory/src/components/Empolyee/EmployeeRow.jsx":"5"},{"size":200,"mtime":1611625820431,"results":"6","hashOfConfig":"7"},{"size":198,"mtime":1611626391243,"results":"8","hashOfConfig":"7"},{"size":3159,"mtime":1611627657945,"results":"9","hashOfConfig":"7"},{"size":499,"mtime":1611621408491,"results":"10","hashOfConfig":"7"},{"size":470,"mtime":1611621505923,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"s4evxg",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/komishtato/Desktop/gt-pt/homework/associate-directory/src/index.js",[],["24","25"],"/Users/komishtato/Desktop/gt-pt/homework/associate-directory/src/App.js",[],"/Users/komishtato/Desktop/gt-pt/homework/associate-directory/src/pages/Home.jsx",[],"/Users/komishtato/Desktop/gt-pt/homework/associate-directory/src/components/Search/SearchBox.jsx",[],"/Users/komishtato/Desktop/gt-pt/homework/associate-directory/src/components/Empolyee/EmployeeRow.jsx",["26"],"import React from \"react\";\n\n// employee information thats rendered in a row on the table\nconst EmployeeRow = (props) => {\n  return (\n    <tr>\n      <th scope=\"row\">\n        <img alt=\"photo of employee\" src={props.picture.thumbnail} />\n      </th>\n      <td>\n        {props.name.first} {props.name.last}\n      </td>\n      <td>{props.phone}</td>\n      <td>{props.email}</td>\n      <td>{props.dob.date.substring(0, 10)}</td>\n    </tr>\n  );\n};\n\nexport default EmployeeRow;\n\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":8,"column":9,"nodeType":"33","endLine":8,"endColumn":70},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]